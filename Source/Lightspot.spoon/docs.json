[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [

    ],
    "Variable" : [
      {
        "doc" : "Default hotkey to use for the chooser when \"hotkeys\" = \"default\".",
        "stripped_doc" : [
          "Default hotkey to use for the chooser when \"hotkeys\" = \"default\"."
        ],
        "name" : "defaultHotkeys",
        "desc" : "Default hotkey to use for the chooser when \"hotkeys\" = \"default\".",
        "notes" : [

        ],
        "signature" : "Lightspot.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.defaultHotkeys",
        "parameters" : [

        ]
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log\nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log",
          "level for the messages coming from the Spoon."
        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "Lightspot.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.logger",
        "parameters" : [

        ]
      },
      {
        "doc" : "Lightspot specific log level override, see hs.logger.setLogLevel for options.",
        "stripped_doc" : [
          "Lightspot specific log level override, see hs.logger.setLogLevel for options."
        ],
        "name" : "logLevel",
        "desc" : "Lightspot specific log level override, see hs.logger.setLogLevel for options.",
        "notes" : [

        ],
        "signature" : "Lightspot.logLevel",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.logLevel",
        "parameters" : [

        ]
      },
      {
        "doc" : "hs.chooser object representing the chooser.",
        "stripped_doc" : [
          "hs.chooser object representing the chooser."
        ],
        "name" : "chooser",
        "desc" : "hs.chooser object representing the chooser.",
        "notes" : [

        ],
        "signature" : "Lightspot.chooser",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.chooser",
        "parameters" : [

        ]
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Lightweight, consistent, and fast Spotlight replacement.",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "doc" : "Lightweight, consistent, and fast Spotlight replacement.\n\nDownload: https:\/\/github.com\/adammillerio\/Spoons\/raw\/main\/Spoons\/Lightspot.spoon.zip\n\nREADME: [README.md](https:\/\/github.com\/adammillerio\/Lightspot.spoon\/blob\/main\/README.md)",
    "Method" : [
      {
        "doc" : "Spoon initializer method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon initializer method for Lightspot.",
          ""
        ],
        "name" : "init",
        "desc" : "Spoon initializer method for Lightspot.",
        "notes" : [

        ],
        "signature" : "Lightspot:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "Lightspot:init()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Spoon start method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * Starts the hs.chooser which is then bound to the \"chooser\" hotkey.",
        "stripped_doc" : [
          "Spoon start method for Lightspot.",
          ""
        ],
        "name" : "start",
        "desc" : "Spoon start method for Lightspot.",
        "notes" : [
          " * Starts the hs.chooser which is then bound to the \"chooser\" hotkey."
        ],
        "signature" : "Lightspot:start()",
        "type" : "Method",
        "returns" : [
          " * None",
          ""
        ],
        "def" : "Lightspot:start()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Spoon stop method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * Stops the hs.chooser.",
        "stripped_doc" : [
          "Spoon stop method for Lightspot.",
          ""
        ],
        "name" : "stop",
        "desc" : "Spoon stop method for Lightspot.",
        "notes" : [
          " * Stops the hs.chooser."
        ],
        "signature" : "Lightspot:stop()",
        "type" : "Method",
        "returns" : [
          " * None",
          ""
        ],
        "def" : "Lightspot:stop()",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "Command" : [

    ],
    "Field" : [

    ],
    "items" : [
      {
        "doc" : "hs.chooser object representing the chooser.",
        "stripped_doc" : [
          "hs.chooser object representing the chooser."
        ],
        "name" : "chooser",
        "desc" : "hs.chooser object representing the chooser.",
        "notes" : [

        ],
        "signature" : "Lightspot.chooser",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.chooser",
        "parameters" : [

        ]
      },
      {
        "doc" : "Default hotkey to use for the chooser when \"hotkeys\" = \"default\".",
        "stripped_doc" : [
          "Default hotkey to use for the chooser when \"hotkeys\" = \"default\"."
        ],
        "name" : "defaultHotkeys",
        "desc" : "Default hotkey to use for the chooser when \"hotkeys\" = \"default\".",
        "notes" : [

        ],
        "signature" : "Lightspot.defaultHotkeys",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.defaultHotkeys",
        "parameters" : [

        ]
      },
      {
        "doc" : "Lightspot specific log level override, see hs.logger.setLogLevel for options.",
        "stripped_doc" : [
          "Lightspot specific log level override, see hs.logger.setLogLevel for options."
        ],
        "name" : "logLevel",
        "desc" : "Lightspot specific log level override, see hs.logger.setLogLevel for options.",
        "notes" : [

        ],
        "signature" : "Lightspot.logLevel",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.logLevel",
        "parameters" : [

        ]
      },
      {
        "doc" : "Logger object used within the Spoon. Can be accessed to set the default log\nlevel for the messages coming from the Spoon.",
        "stripped_doc" : [
          "Logger object used within the Spoon. Can be accessed to set the default log",
          "level for the messages coming from the Spoon."
        ],
        "name" : "logger",
        "desc" : "Logger object used within the Spoon. Can be accessed to set the default log",
        "notes" : [

        ],
        "signature" : "Lightspot.logger",
        "type" : "Variable",
        "returns" : [

        ],
        "def" : "Lightspot.logger",
        "parameters" : [

        ]
      },
      {
        "doc" : "Spoon initializer method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None",
        "stripped_doc" : [
          "Spoon initializer method for Lightspot.",
          ""
        ],
        "name" : "init",
        "desc" : "Spoon initializer method for Lightspot.",
        "notes" : [

        ],
        "signature" : "Lightspot:init()",
        "type" : "Method",
        "returns" : [
          " * None"
        ],
        "def" : "Lightspot:init()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Spoon start method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * Starts the hs.chooser which is then bound to the \"chooser\" hotkey.",
        "stripped_doc" : [
          "Spoon start method for Lightspot.",
          ""
        ],
        "name" : "start",
        "desc" : "Spoon start method for Lightspot.",
        "notes" : [
          " * Starts the hs.chooser which is then bound to the \"chooser\" hotkey."
        ],
        "signature" : "Lightspot:start()",
        "type" : "Method",
        "returns" : [
          " * None",
          ""
        ],
        "def" : "Lightspot:start()",
        "parameters" : [
          " * None",
          ""
        ]
      },
      {
        "doc" : "Spoon stop method for Lightspot.\n\nParameters:\n * None\n\nReturns:\n * None\n\nNotes:\n * Stops the hs.chooser.",
        "stripped_doc" : [
          "Spoon stop method for Lightspot.",
          ""
        ],
        "name" : "stop",
        "desc" : "Spoon stop method for Lightspot.",
        "notes" : [
          " * Stops the hs.chooser."
        ],
        "signature" : "Lightspot:stop()",
        "type" : "Method",
        "returns" : [
          " * None",
          ""
        ],
        "def" : "Lightspot:stop()",
        "parameters" : [
          " * None",
          ""
        ]
      }
    ],
    "name" : "Lightspot"
  }
]
